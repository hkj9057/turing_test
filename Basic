#TYPE(형)

int -> 정수
float -> 소수
str -> 문자
list, class, function, tuple, dictionary etc

c언어

double 소수

#형변환

string -> int
string -> float
float -> int

ex) int(imput()), str -> int
ex) float(input)), str -> float

#조건문

if, elif, else

#반복문
while, for 문

차이점 -> for문은 범위 고정일때 good
         while문은 범위가 모를때 good
break
continus

#switch

#리스트

Data를 저장하는 공간을 뜻한다.

a = []

값의 추가
.append()

값을 삭제
del a[3]

!리스트는 0부터 시작

#tuple

a = (1,2,3)

접근시
a[0]

tuple is not change


#dictionary

a = {"nam":"hi", "name":"namgil", "name":"kkkk"}

key, value

a["nam"]
ㅡ> hi

a["name"]

-> kkkkk

#변수(Variable)

공간 -> 객체(object)를 담고있는 공간


# = , ==
대입, 같다

#function 함수

코드들의 모임, why?????? = 중복을 방지, 추상화 abstract

#class 클래스

함수와 변수들의 모임

class , object 와는 다른거?

class는 붕어빵틀
object는 붕어빵

#자료구조

stack(스택)
FILO(First in Last out)

[ ]
[ ]
[_]

Queue(큐)
FIFO(First in First out)

-----
3 4 5
-----

Tree(트리)

NOde(노드), edge(엣지)로 연결 되어 있는데

CYCLE(순환) 구조 생기나 안생기나??
순환구조 안생김

그래프(Graph)

Node랑 edge랑 연결이 되어있고 순환구조가 있는 자료구조

#알고리즘

이진 탐색

반씩 잘라서 값을 찾는 과정

Greedy 알고리즘(== 욕심 알고리즘)

현재 입장에서 최대한의 이익을 취하는 구조 ex) 동전 바꿔주기

사용하는 이유 == 빨라서 좋다.

BFS,DFS

BFS(Breadth First Search)
넓이 우선 탐색

DFS(Depth First Search)
깊이 우선 탐색
ex) 미로탐색

정렬

거품정렬 bubble sort

삽입정렬 insert sort

선택 정렬 selective sort

퀵 정렬 quick sort

병합 정렬 merge sort

재귀함수
자기 자신을 호출하는 함수

def fun():

    fun()

허프만 알고리즘

가장 많은 것을 가장 작은 수로 표현

#파일 입출력

파일로부터 텍스트나 숫자를 읽어 오는것

#경로

절대경로
/ 로start

상대경로

현재 위치에서부터 파일이 시작
./,../ 점은 현재위치 , 점점은 현재위치에서 한칸 위에서 시작
